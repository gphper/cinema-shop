// Code generated by goctl. DO NOT EDIT!
// Source: film.proto

package film

import (
	"context"

	"cinema-shop/services/film/rpc/pb/film"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	FilmDatailRequest  = film.FilmDatailRequest
	FilmDetailInfo     = film.FilmDetailInfo
	FilmDetailResponse = film.FilmDetailResponse
	FilmListInfo       = film.FilmListInfo
	FilmListRequest    = film.FilmListRequest
	FilmListResponse   = film.FilmListResponse

	Film interface {
		// 影片列表
		List(ctx context.Context, in *FilmListRequest, opts ...grpc.CallOption) (*FilmListResponse, error)
		// 影片详情
		Detail(ctx context.Context, in *FilmDatailRequest, opts ...grpc.CallOption) (*FilmDetailResponse, error)
	}

	defaultFilm struct {
		cli zrpc.Client
	}
)

func NewFilm(cli zrpc.Client) Film {
	return &defaultFilm{
		cli: cli,
	}
}

// 影片列表
func (m *defaultFilm) List(ctx context.Context, in *FilmListRequest, opts ...grpc.CallOption) (*FilmListResponse, error) {
	client := film.NewFilmClient(m.cli.Conn())
	return client.List(ctx, in, opts...)
}

// 影片详情
func (m *defaultFilm) Detail(ctx context.Context, in *FilmDatailRequest, opts ...grpc.CallOption) (*FilmDetailResponse, error) {
	client := film.NewFilmClient(m.cli.Conn())
	return client.Detail(ctx, in, opts...)
}
