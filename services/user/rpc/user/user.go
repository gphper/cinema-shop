// Code generated by goctl. DO NOT EDIT!
// Source: user.proto

package user

import (
	"context"

	"cinema-shop/services/user/rpc/pb/user"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	GetUserByEmailRequest  = user.GetUserByEmailRequest
	GetUserByEmailResponse = user.GetUserByEmailResponse
	GetUserByIDRequest     = user.GetUserByIDRequest
	GetUserByIdResponse    = user.GetUserByIdResponse
	UserInfo               = user.UserInfo

	User interface {
		//  根据邮箱获取用户秘钥和密码
		GetUserByEmail(ctx context.Context, in *GetUserByEmailRequest, opts ...grpc.CallOption) (*GetUserByEmailResponse, error)
		//  根据ID获取信息
		GetUserByID(ctx context.Context, in *GetUserByIDRequest, opts ...grpc.CallOption) (*GetUserByIdResponse, error)
	}

	defaultUser struct {
		cli zrpc.Client
	}
)

func NewUser(cli zrpc.Client) User {
	return &defaultUser{
		cli: cli,
	}
}

//  根据邮箱获取用户秘钥和密码
func (m *defaultUser) GetUserByEmail(ctx context.Context, in *GetUserByEmailRequest, opts ...grpc.CallOption) (*GetUserByEmailResponse, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.GetUserByEmail(ctx, in, opts...)
}

//  根据ID获取信息
func (m *defaultUser) GetUserByID(ctx context.Context, in *GetUserByIDRequest, opts ...grpc.CallOption) (*GetUserByIdResponse, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.GetUserByID(ctx, in, opts...)
}
