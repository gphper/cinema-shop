syntax = "proto3";

package order;
option go_package="./order";

//根据排片ID获取已被占用的座位
message TicketSeatRequest {
  int64 screen_id = 1;
}

message TicketSeatResponse {
  repeated string seat  = 1;
}

//创建订单
message OrderRequest{
  int64 screen_id = 1;
  int64 seat_num = 2;
  repeated string seat_map = 3;
}

message OrderResponse{
  int64 ack = 1;
}

//生成订单及门票相关数据
message OrderGenRequest{
  string data = 1;
}

message OrderGenResponse{
  string ack = 1;
  int64 order_id = 2;
}

//取消订单
message OrderCancelRequest{
  int64 order_id = 1;
}

message OrderCancelResponse{
  string ack = 1;
}

service Order {
  //根据排片ID获取已被占用的座位
  rpc TicketSeat(TicketSeatRequest) returns(TicketSeatResponse);
  //创建订单
  rpc OrderCreate(OrderRequest) returns(OrderResponse);
  //生成订单数据
  rpc OrderGen(OrderGenRequest) returns(OrderGenResponse);
  //取消订单
  rpc OrderCancel(OrderCancelRequest) returns(OrderCancelResponse);
}
