// Code generated by goctl. DO NOT EDIT!
// Source: order.proto

package order

import (
	"context"

	"cinema-shop/services/order/rpc/pb/order"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	TicketSeatRequest  = order.TicketSeatRequest
	TicketSeatResponse = order.TicketSeatResponse

	Order interface {
		// 根据排片ID获取已被占用的座位
		TicketSeat(ctx context.Context, in *TicketSeatRequest, opts ...grpc.CallOption) (*TicketSeatResponse, error)
	}

	defaultOrder struct {
		cli zrpc.Client
	}
)

func NewOrder(cli zrpc.Client) Order {
	return &defaultOrder{
		cli: cli,
	}
}

// 根据排片ID获取已被占用的座位
func (m *defaultOrder) TicketSeat(ctx context.Context, in *TicketSeatRequest, opts ...grpc.CallOption) (*TicketSeatResponse, error) {
	client := order.NewOrderClient(m.cli.Conn())
	return client.TicketSeat(ctx, in, opts...)
}
